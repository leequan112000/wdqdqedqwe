type User {
  id: String!
  email: String
  first_name: String
  last_name: String
  full_name: String
  created_at: Date
  updated_at: Date
  user_type: String
  has_completed_onboarding: Boolean
  customer: Customer
  vendor_member: VendorMember
  pseudonyms: Pseudonyms
  notifications: [Notification]
  has_setup_profile: Boolean
  company_name: String
  company_collaborator_role: String
  is_active: Boolean @deprecated(reason: "Use `deactivated_at`.")
  country_code: String
  phone_number: String
  is_connected_microsoft: Boolean
  is_connected_google: Boolean
  deactivated_at: Date
  status: String
}

type Pseudonyms {
  id: String
  first_name: String
  last_name: String
  email: String
  phone_number: String
  country_code: String
}

type AuthResponse {
  access_token: String!
  refresh_token: String!
}

type Query {
  user: User
}

type Mutation {
  signUpUser(
    email: String!
    password: String!
    timezone: String!
  ): AuthResponse!
  signInUser(email: String!, password: String!): AuthResponse!
  refreshJWT: AuthResponse
  forgotPassword(email: String): Boolean
  resetPassword(reset_token: String, new_password: String): Boolean
  changePassword(old_password: String!, new_password: String!): Boolean
  updateUserInfo(
    first_name: String!
    last_name: String!
    email: String!
    phone_number: String
    country_code: String
  ): User
}
